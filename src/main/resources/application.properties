# ===================================================================
# CORE SPRING BOOT SETTINGS
# ===================================================================
# Sets the port on which the web server will run
server.port=8080

# The application name, which will be displayed in logs and management endpoints
spring.application.name=crypto-scalping-bot

# Cache
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=100,expireAfterWrite=5m


# ===================================================================
# DATABASE (MySQL) CONFIGURATION
# ===================================================================
# URL for connecting to the MySQL database.
# Ensure a database named 'scalping_bot_db' exists.
# serverTimezone=Europe/Moscow is important for correct date/time handling.
spring.datasource.url=jdbc:mysql://localhost:3306/scalping_bot_db?createDatabaseIfNotExist=true&serverTimezone=Europe/Moscow
spring.datasource.username=root
spring.datasource.password=Alex9952+
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Flyway settings
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true


# Hibernate/JPA Settings
# ddl-auto=update: Hibernate will automatically update the table structure based on your @Entity classes.
# Convenient for development. For production, it's better to use 'validate' or 'none'.
spring.jpa.hibernate.ddl-auto=update
# Whether to display the SQL queries generated by Hibernate in the logs. Useful for debugging.
spring.jpa.show-sql=true
# Formats the SQL queries in logs for better readability.
spring.jpa.properties.hibernate.format_sql=true


# ===================================================================
# BINANCE API CONFIGURATION
# ===================================================================
# Binance API URL. For live trading, use "https://api.binance.com".
# For testing, use "https://testnet.binance.vision".
binance.api.base-url=https://testnet.binance.vision
binance.ws.base-url=wss://stream.binance.com:9443

# !!! YOUR BINANCE KEYS MUST BE INSERTED HERE !!!
# Never commit these keys to a public repository (git).
# Use environment variables or a secure vault (like Spring Cloud Config) for production.
binance.api.key=YOUR_BINANCE_API_KEY
binance.api.secret=YOUR_BINANCE_API_SECRET


# ===================================================================
# BYBIT API CONFIGURATION (V5)
# ===================================================================
# Bybit API URL. For live trading, use "https://api.bybit.com".
# For testing, use "https://api-testnet.bybit.com".
bybit.api.base-url=https://api-testnet.bybit.com

# !!! YOUR BYBIT KEYS MUST BE INSERTED HERE !!!
bybit.api.key=YOUR_BYBIT_API_KEY
bybit.api.secret=YOUR_BYBIT_API_SECRET

# Receive window (in milliseconds), used for signing Bybit requests.
bybit.api.recv-window=5000


# ===================================================================
# TELEGRAM NOTIFIER CONFIGURATION
# ===================================================================
# Your Telegram bot token, obtained from @BotFather.
telegram.bot-token=YOUR_TELEGRAM_BOT_TOKEN
# The ID of your chat where the bot will send notifications.
telegram.chat-id=YOUR_TELEGRAM_CHAT_ID


# ===================================================================
# BOT & STRATEGY CONFIGURATION
# ===================================================================
# Trading pairs the bot will monitor (comma-separated, no spaces).
bot.trading-pairs=BTCUSDT,ETHUSDT

# Settings for the Simple Moving Average (SMA) crossover strategy
strategy.sma.short-period=10
strategy.sma.long-period=50
# For how many hours to fetch historical data for analysis
strategy.data.fetch-hours=24


# ===================================================================
# RISK MANAGEMENT CONFIGURATION
# ===================================================================
# Initial capital for risk calculations.
risk.initial-capital=10000
# The quote asset used to measure profit (used for position size calculation).
risk.quote-asset=USDT

# Risk per trade as a percentage of the available quote asset balance.
# For example, 10 means 10% of the available USDT balance will be allocated per trade.
risk.per-trade.percentage=10

# Trailing stop percentage.
risk.default.trailing-stop.percentage=2.5

# Default stop-loss and take-profit percentages.
risk.default.stop-loss.percentage=1.5
risk.default.take-profit.percentage=3.0

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
# Sets the logging level for our specific application package.
# INFO - standard messages. DEBUG - for detailed debugging. TRACE - for the most detailed.
logging.level.com.example.scalpingbot=INFO